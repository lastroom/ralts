/*
 * Grid implementation
 *  <div class="grid">
 *      <div class="row">
 *          <div class="column-2">Content</div>
 *          <div class="column-10">Content</div>
 *      </div>
 *  </div>
 */

.generate-columns(@columns, @i: 1) when (@i =< @columns) {
    .column-@{i} {
        width: @columnWidth * @i + @gutterWidth * (@i - 1);
        margin-right: @gutterWidth;
        background: @column-background;
        font-size: @small;
        float: left;
        position: static;
        height: 100%;
    }
    *[class^="column-"]:last-child,
    *[class*=" column-"]:last-child {
        margin-right: 0;
    }
    .generate-columns(@columns, (@i + 1));
}

.container {
    width: 100%;
    .clearfix();
}

.generate-grid() {
    .grid {
        padding: 0;
        width: (@columnWidth * @columns + @gutterWidth * (@columns - 1)) + (@marginWidth * 2)!important;
        margin: 0 auto;
        background: @grid-background;
        .row {
            background: @row-background;
            margin: 0 auto @rowSpacing;
            width: @columnWidth * @columns + @gutterWidth * (@columns - 1);
            .generate-columns(@columns);
            font-size: 0!important;
            .clearfix();
        }
        .clearfix();
    }
}

*[class^="column-"] > input,
*[class^="column-"] > textarea,
*[class*=" column-"] > input,
*[class*=" column-"] > textarea {
    width: ~'calc( 100% - 22px )';
}

*[class^="column-"] > input[type="checkbox"],
*[class*="column-"] > input[type="checkbox"] {
    width: auto;
}

*[class^="column-"] > select,
*[class*="column-"] > select {
    width: 100%;
}
