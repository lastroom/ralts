/*
 * Grid implementation
 *  <div class="grid">
 *      <div class="row">
 *          <div class="column-2">Content</div>
 *          <div class="column-10">Content</div>
 *      </div>
 *  </div>
 */

.generate-columns(@columns, @i: 1) when (@i =< @columns) {
    .column-@{i} {
        width: @columnWidth * @i + @gutterWidth * (@i - 1);
        margin-right: @gutterWidth;
        float: left;
        background: @colum-background;
    }
    *[class^="column-"]:last-child,
    *[class*=" column-"]:last-child {
        margin-right: 0;
    }
    .generate-columns(@columns, (@i + 1));
}

.container {
    width: 100%;
    .clearfix();
}

.grid {
    padding: 0;
    width: (@columnWidth * @columns + @gutterWidth * (@columns - 1)) + (@marginWidth * 2);
    margin: 0 auto;
    background: @grid-background;
    .row {
        background: @row-background;
        margin: 0 auto 20px;
        width: @columnWidth * @columns + @gutterWidth * (@columns - 1);
        .generate-columns(@columns);
        .clearfix();
    }
    .clearfix();
}

*[class^="column-"],
*[class*=" column-"] {
    input, textarea {
        width: ~'calc( 100% - 22px )';
    }
    select {
        width: 100%;
    }
}

